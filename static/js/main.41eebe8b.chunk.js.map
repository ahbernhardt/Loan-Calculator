{"version":3,"sources":["../node_modules/@ionic/pwa-elements/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","components/color.js","components/TabStyles.js","components/BasicForm/style.js","components/BasicForm/BasicCalculation.js","components/InterestForm/style.js","components/InterestForm/InterestForm.js","components/AmortizationForm/style.js","components/AmortizationForm/AmortizationForm.js","components/App/style.js","components/App/App.js","serviceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","colors","TabListStyle","styledTabTab","ActionButtonStyle","TabStyle","PanelStyle","styled","props","active","vertical","TabList","ActionButton","Tab","Panel","BasicFormWrapper","div","Info","FormTitle","h2","CalculationForm","CalculatorFormInput","FormInput","ResultSide","BasicForm","className","type","value","InterestFormWrapper","InterestForm","AmortizationFormWrapper","ResultTable","Result","table","AmortizationForm","Section","section","SectionTitle","h1","App","customStyle","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","defineCustomElements"],"mappings":"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","file":"static/js/main.41eebe8b.chunk.js","sourcesContent":["var map = {\n\t\"./pwa-action-sheet.entry.js\": [\n\t\t215,\n\t\t5\n\t],\n\t\"./pwa-camera-modal-instance.entry.js\": [\n\t\t216,\n\t\t6\n\t],\n\t\"./pwa-camera-modal.entry.js\": [\n\t\t217,\n\t\t7\n\t],\n\t\"./pwa-camera.entry.js\": [\n\t\t218,\n\t\t8\n\t],\n\t\"./pwa-toast.entry.js\": [\n\t\t219,\n\t\t9\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 210;\nmodule.exports = webpackAsyncContext;","export const colors = {\n  darknavy: '#020c1b',\n  navy: '#0a192f',\n  lightnavy: '#112240',\n  lightestnavy: '#233554',\n  navyshadow: 'rgba(2, 12, 27, 0.7)',\n  slate: '#8892b0',\n  lightslate: '#a8b2d1',\n  lightestslate: '#ccd6f6',\n  white: '#e6f1ff',\n  green: '#64ffda',\n  greentint: 'rgba(100, 255, 218, 0.1)'\n}\n","import styled from 'styled-components';\nimport { styled as styledTabTab } from 'react-tabtab';\nimport {colors} from './color'\n\nlet {TabListStyle, ActionButtonStyle, TabStyle, PanelStyle} = styledTabTab;\n\nTabListStyle = styled(TabListStyle)`\n  background-color: transparent;\n  border: 0;\n  width: 30%;\n`;\n\nTabStyle = styled(TabStyle)`\n  transition: color .28s ease;\n  color: ${colors.slate};\n  display: block;\n  z-index: 5;\n  border-left: 1px solid  ${colors.lightestnavy};\n  ${props => props.active && !props.vertical ?\n    `\n      border-left: 2px solid ${colors.green};\n      color:  ${colors.green};\n    `\n    : null}\n  &:hover {\n    background-color:  ${colors.greentint};\n    color:  ${colors.green};\n    border-left: 2px solid  ${colors.green};\n  }\n`;\n\nActionButtonStyle = styled(ActionButtonStyle)`\n  background-color: transparent;\n  border: transparent;\n  z-index: -3;\n  // border-right: 1px solid  ${colors.lightestnavy};\n`;\n\nPanelStyle = styled(PanelStyle)`\n  width: 70%;\n  align-items: right;\n  right: 0;\n  margin-top: -15%;\n  margin-left: 28%;\n  transition: box-shadow .25s, -webkit-box-shadow .25s;\n  background-color: transparent;\n`;\n\nexport default {\n    TabList: TabListStyle,\n    ActionButton: ActionButtonStyle,\n    Tab: TabStyle,\n    Panel: PanelStyle\n}\n","import styled from 'styled-components'\nimport {colors} from \"../color\";\n\nexport const BasicFormWrapper = styled.div`\n\tdisplay: block;\n\tcolor: ${colors.slate};\n`\nexport const Info = styled.div`\n\tdisplay: block;\n`\n\nexport const FormTitle = styled.h2`\n\tcolor: ${colors.white};\n\t\n`\nexport const CalculationForm = styled.div`\n\tdisplay: flex;\n`\nexport const CalculatorFormInput = styled.div`\n\tdisplay: block;\n\twidth: 30%;\n\tmargin-right: 35px;\n`\nexport const FormInput = styled.div`\n\tdisplay: block;\n\tmargin: 5px 0;\n\t\n\tlabel {\n\t  margin-top: 20px;\n\t  margin-bottom: 5px;\n\t  display: block;\n\t}\n\t\n\tinput[type=text] {\n\t  box-sizing: border-box;\n\t  width: 100%;\n\t  padding: 5px 10px;\n\t  font-size: 110%;\n\t  border: 0;\n\t}\n\t\n\tsmall {\n\t  font-size: .85em;\n\t  color: lighten( $grey, 10% );\n\t}\n`\nexport const ResultSide = styled.div`\n\tdisplay: block;\n\tmargin: 20px 0;\n\t\n\tlabel{\n\t\tcolor: ${colors.green}\n\t}\n`\n","import React from 'react';\nimport {BasicFormWrapper, CalculationForm, CalculatorFormInput, FormInput, FormTitle, Info, ResultSide} from \"./style\";\n\nexport default function BasicForm() {\n    return (\n    <BasicFormWrapper>\n        <Info>\n            <FormTitle>Basic Loan Calculation</FormTitle>\n            <p>Grabs three values from the form, and returns general information about a loan.</p>\n        </Info>\n\n        <CalculationForm>\n            <CalculatorFormInput>\n                <FormInput className=\"accrue-field-amount\">\n                    <p><label>Loan Amount:</label>\n                       <input type=\"text\" className=\"amount\" value=\"7,500\" />\n                    </p>\n                </FormInput>\n\n                <FormInput className=\"accrue-field-rate\">\n                    <p>\n                        <label>Rate (APR):</label>\n                        <input type=\"text\" className=\"rate\" value=\"7%\"/>\n                    </p>\n                </FormInput>\n\n                <FormInput className=\"accrue-field-term\">\n                    <p>\n                        <label>Term:</label>\n                        <input type=\"text\" className=\"term\" value=\"36m\"/>\n                        <small>Format: 12m, 36m, 3y, 7y</small>\n                    </p>\n                </FormInput>\n            </CalculatorFormInput>\n\n            <ResultSide>\n                <p><label>Results:</label></p>\n                <div className=\"results\"/>\n            </ResultSide>\n            <div className=\"clear\"/>\n        </CalculationForm>\n    </BasicFormWrapper>\n    )\n}\n","import styled from 'styled-components'\nimport {colors} from \"../color\";\n\nexport const InterestFormWrapper = styled.div`\n\tdisplay: block;\n\tcolor: ${colors.slate};\n`\nexport const Info = styled.div`\n\tdisplay: block;\n`\n\nexport const FormTitle = styled.h2`\n\tcolor: ${colors.white};\n\t\n`\nexport const CalculationForm = styled.div`\n\tdisplay: flex;\n`\nexport const CalculatorFormInput = styled.div`\n\tdisplay: block;\n\twidth: 30%;\n\tmargin-right: 35px;\n`\nexport const FormInput = styled.div`\n\tdisplay: block;\n\tmargin: 5px 0;\n\t\n\tlabel {\n\t  margin-top: 20px;\n\t  margin-bottom: 5px;\n\t  display: block;\n\t}\n\t\n\tinput[type=text] {\n\t  box-sizing: border-box;\n\t  width: 100%;\n\t  padding: 5px 10px;\n\t  font-size: 110%;\n\t  border: 0;\n\t}\n\t\n\tsmall {\n\t  font-size: .85em;\n\t  color: lighten( $grey, 10% );\n\t}\n`\nexport const ResultSide = styled.div`\n\tdisplay: block;\n\tmargin: 20px 0;\n\t\n\tlabel{\n\t\tcolor: ${colors.green}\n\t}\n`\n","import React from 'react';\nimport {InterestFormWrapper, CalculationForm, CalculatorFormInput, FormInput, FormTitle, Info, ResultSide} from \"./style\";\n\nexport default function InterestForm() {\n  return (\n\t  <InterestFormWrapper>\n\t\t<Info>\n\t\t  <FormTitle>Interest Savings Calculation</FormTitle>\n\t\t  <p>Grabs four values from the form, and returns general information about a loan.</p>\n\t\t</Info>\n\n\t\t<CalculationForm>\n\t\t  <CalculatorFormInput>\n\t\t\t<FormInput className=\"accrue-field-amount\">\n\t\t\t  <p><label>Loan Amount:</label>\n\t\t\t\t<input type=\"text\" className=\"amount\" value=\"7,500\"/>\n\t\t\t  </p>\n\t\t\t</FormInput>\n\n\t\t\t<FormInput className=\"accrue-field-rate\">\n\t\t\t  <p>\n\t\t\t\t<label>Rate (APR):</label>\n\t\t\t\t<input type=\"text\" className=\"rate\" value=\"7%\"/>\n\t\t\t  </p>\n\t\t\t</FormInput>\n\n\t\t\t<FormInput className=\"accrue-field-term\">\n\t\t\t  <p>\n\t\t\t\t<label>Term:</label>\n\t\t\t\t<input type=\"text\" className=\"term\" value=\"36m\"/>\n\t\t\t\t<small>Format: 12m, 36m, 3y, 7y</small>\n\t\t\t  </p>\n\t\t\t</FormInput>\n\n\t\t\t<FormInput className=\"accrue-field-rate_compare\">\n\t\t\t  <p>\n\t\t\t\t<label>Comparison Rate:</label>\n\t\t\t\t<input type=\"text\" className=\"rate_compare\" value=\"1.49%\"/>\n\t\t\t  </p>\n\t\t\t</FormInput>\n\t\t  </CalculatorFormInput>\n\n\t\t  <ResultSide>\n\t\t\t<p><label>Results:</label></p>\n\t\t\t<div className=\"results\"/>\n\t\t  </ResultSide>\n\t\t  <div className=\"clear\"/>\n\t\t</CalculationForm>\n\t  </InterestFormWrapper>\n  )\n}\n","import styled from 'styled-components'\nimport {colors} from \"../color\";\n\nexport const AmortizationFormWrapper = styled.div`\n\tdisplay: block;\n\tcolor: ${colors.slate};\n`\nexport const Info = styled.div`\n\tdisplay: block;\n`\n\nexport const FormTitle = styled.h2`\n\tcolor: ${colors.white};\n\t\n`\nexport const CalculationForm = styled.div`\n\tdisplay: flex;\n`\nexport const CalculatorFormInput = styled.div`\n\tdisplay: block;\n\twidth: 30%;\n\tmargin-right: 35px;\n`\nexport const FormInput = styled.div`\n\tdisplay: block;\n\tmargin: 5px 0;\n\t\n\tlabel {\n\t  margin-top: 20px;\n\t  margin-bottom: 5px;\n\t  display: block;\n\t}\n\t\n\tinput[type=text] {\n\t  box-sizing: border-box;\n\t  width: 100%;\n\t  padding: 5px 10px;\n\t  font-size: 110%;\n\t  border: 0;\n\t}\n\t\n\tsmall {\n\t  font-size: .85em;\n\t  color: lighten( $grey, 10% );\n\t}\n`\nexport const ResultSide = styled.div`\n\tdisplay: block;\n\tmargin: 20px 0;\n\t\n\tlabel{\n\t\tcolor: ${colors.green}\n\t}\n`\nexport const ResultTable = styled.div`\n\n`\nexport const Result = styled.table`\n\tmin-width: 100%;\n\tbackground: ${colors.greentint};\n\tborder: solid 1px ${colors.green};\n\tpadding: 20px/2 20px;\n    margin-top: 5px;\n    overflow: auto;\n    color: ${colors.lightestslate};\n    \n\tth {\n\t  white-space: nowrap;\n\t  padding: 2px 10px;\n\t  border-right: solid 1px ${colors.lightnavy};\n\t  border-bottom: solid 1px ${colors.lightestslate};\n\t}\n\n\ttd {\n\t  padding: 2px;\n\t  text-align: center;\n\t  border-right: solid 1px ${colors.lightnavy};\n\t}\n`\n","import React from 'react';\nimport {\n  AmortizationFormWrapper,\n  CalculationForm,\n  CalculatorFormInput,\n  FormInput,\n  FormTitle,\n  Info, Result,\n  ResultSide,\n  ResultTable\n} from \"./style\";\n\nexport default function AmortizationForm() {\n  return (\n\t  <AmortizationFormWrapper>\n\t\t<Info>\n\t\t  <FormTitle>Interest Savings Calculation</FormTitle>\n\t\t  <p>Grabs three values from the form, and displays a complete amortization schedule for the provided loan information.</p>\n\t\t</Info>\n\n\t\t<CalculationForm>\n\t\t  <CalculatorFormInput>\n\t\t\t<FormInput className=\"accrue-field-amount\">\n\t\t\t  <p><label>Loan Amount:</label>\n\t\t\t\t<input type=\"text\" className=\"amount\" value=\"7,500\"/>\n\t\t\t  </p>\n\t\t\t</FormInput>\n\n\t\t\t<FormInput className=\"accrue-field-rate\">\n\t\t\t  <p>\n\t\t\t\t<label>Rate (APR):</label>\n\t\t\t\t<input type=\"text\" className=\"rate\" value=\"7%\"/>\n\t\t\t  </p>\n\t\t\t</FormInput>\n\n\t\t\t<FormInput className=\"accrue-field-term\">\n\t\t\t  <p>\n\t\t\t\t<label>Term:</label>\n\t\t\t\t<input type=\"text\" className=\"term\" value=\"36m\"/>\n\t\t\t\t<small>Format: 12m, 36m, 3y, 7y</small>\n\t\t\t  </p>\n\t\t\t</FormInput>\n\n\t\t\t<FormInput className=\"accrue-field-rate_compare\">\n\t\t\t  <p>\n\t\t\t\t<label>Comparison Rate:</label>\n\t\t\t\t<input type=\"text\" className=\"rate_compare\" value=\"1.49%\"/>\n\t\t\t  </p>\n\t\t\t</FormInput>\n\t\t  </CalculatorFormInput>\n\n\t\t  <ResultSide>\n\t\t\t<p><label>Results:</label></p>\n\t\t\t<ResultTable>\n\t\t\t  <Result className=\"accrue-amortization\">\n\t\t\t\t<thead>\n\t\t\t  \t<tr>\n\t\t\t\t  <th className=\"accrue-payment-number\">#</th>\n\t\t\t\t  <th className=\"accrue-payment-amount\">Payment Amt.</th>\n\t\t\t\t   <th className=\"accrue-total-interest\">Total Interest</th>\n\t\t\t\t  <th className=\"accrue-total-payments\">Total Payments</th>\n\t\t\t\t  <th className=\"accrue-balance\">Balance</th>\n\t\t\t  \t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t  <tr>\n\t\t\t\t\t<td className=\"accrue-payment-number\">1</td>\n\t\t\t\t\t<td className=\"accrue-payment-amount\">$231.58</td>\n\t\t\t\t\t<td className=\"accrue-total-interest\">$23.24</td>\n\t\t\t\t\t<td className=\"accrue-total-payments\">$231.58</td>\n\t\t\t\t\t<td className=\"accrue-balance\">$7,291.67</td>\n\t\t\t\t  </tr>\n\t\t\t\t</tbody>\n\t\t\t  </Result>\n\t\t\t</ResultTable>\n\t\t  </ResultSide>\n\t\t  <div className=\"clear\"/>\n\t\t</CalculationForm>\n\t  </AmortizationFormWrapper>\n  )\n}\n","import styled from \"styled-components\";\nimport {colors} from \"../color\";\n\nexport const Section = styled.section`\n\theight: auto;\n\twidth: 100%;\n\tpadding: 0 2% 0 2%;\n`\n\nexport const SectionTitle = styled.h1`\n\twidth: 100%;\n\tdisplay: flex;\n    -webkit-box-align: center;\n    align-items: center;\n    position: relative;\n    margin: 40px 15px 50px;\n    width: 100%;\n    font-size: clamp(26px,5vw,32px);\n    white-space: nowrap;\n\tcolor: ${colors.lightestslate};\n\t\n\t::before{\n\t  position: relative;\n\t  bottom: 4px;\n\t  counter-increment: section 1;\n\t  content: \"\" counter(section) \".\";\n\t  margin-right: 10px;\n\t  color: ${colors.green};\n\t  font-size: clamp(16px,3vw,20px);\n\t  font-weight: 400;\n    }\n\t::after{\n\t  content: \"\";\n\t  display: block;\n\t  position: relative;\n\t  top: 2px;\n\t  width: 850px;\n\t  height: 1px;\n\t  margin-left: 20px;\n\t  background-color: ${colors.lightestnavy};\n    }\n`\n","// import React from 'react';\n// import $ from 'jquery';\n//\n// import {Paper} from './appstyle';\n// // import BasicForm from \"./components/BasicCalculation\";\n//\n//\n// export default function App () {\n//   ;(function ($, window, document) {\n//\n//\n//     // CALCULATE AMORTIZATION SCHEDULE\n//     // This method outputs a table with the repayment schedule\n//\n//     // CALCULATE COMPARE\n//     // The comparison mode gets 4 values from the form and calculates, then\n//\n//     // CALCULATE BASIC\n//     // for the basic calculation, we're just getting the values and\n//\n//     // GET FIELD\n//     // A function just for grabbing the value from a particular field.\n//     // We need this because if the field doesn't exist, the plugin will\n//     // create it for them.\n//     const get_field = function (elem, options, name) {\n//\n//       // Check for an input with a className of the name.\n//       let field;\n//       if (elem.find(\".accrue-\" + name).length) { // if has a className of accrue-[name]\n//         field = elem.find(\".accrue-\" + name);\n//       } else if (elem.find(\".\" + name).length) { // if we have className of just the name\n//         field = elem.find(\".\" + name);\n//       } else if (elem.find(\"input[name~=\" + name + \"]\").length) {\n//         elem.find(\"input[name~=\" + name + \"]\");\n//       } else {\n//         field = \"\";\n//       }\n//\n//       // If we have the field value, return it right away so that the\n//       // calculator doesn't write the field to the form div since we\n//       // don't need it to.\n//       if (typeof (field) !== \"string\") {\n//         return field.val();\n//       }\n//\n//       if (name === \"term_compare\") {\n//         return false;\n//       }\n//\n//       // If we've gotten here, no fields were found that match the\n//       // criteria. Create the form field and return the default value.\n//       elem.find(\".form\").append(\n//           '<div className=\"accrue-field-' + name + '\">' +\n//           '<p><label>' + options.field_titles[name] + ':</label>' +\n//           '<input type=\"text\" className=\"' + name + '\" value=\"' + options.default_values[name] + '\" />' +\n//           (options.field_comments[name].length > 0 ? \"<small>\" + options.field_comments[name] + \"</small>\" : '') + '</p>' +\n//           '</div>');\n//       return elem.find(\".\" + name).val();\n//\n//     };\n// // calculating loan info for a single loan.\n//     const calculateBasic = function (elem, options, output_elem) {\n//\n//       // get the loan information from the current values in the form.\n//       const loan_info = $.loanInfo({\n//         amount: get_field(elem, options, \"amount\"),\n//         rate: get_field(elem, options, \"rate\"),\n//         term: get_field(elem, options, \"term\")\n//       });\n//\n//       // if valid, output into the output_elem that was passed into this function.\n//       if (loan_info !== 0) {\n//\n//         // replace the placeholders with the response values.\n//         const output_content = options.response_basic\n//             .replace(\"%payment_amount%\", formatNumber(loan_info.payment_amount_formatted, options))\n//             .replace(\"%num_payments%\", loan_info.num_payments)\n//             .replace(\"%total_payments%\", formatNumber(loan_info.total_payments_formatted, options))\n//             .replace(\"%total_interest%\", formatNumber(loan_info.total_interest_formatted, options));\n//\n//         // output the content to the actual output element.\n//         output_elem.html(output_content);\n//\n//       } else {\n//\n//         // if the values for the loan calculation aren't valid, provide an error.\n//         output_elem.html(options.error_text);\n//       }\n//\n//       // run the callback function after the calculation is done, including\n//       // the calculation info so it's available in the callback.\n//       options.callback(elem, loan_info);\n//     };\n// // compares two different loans to determine savings in interest.\n//     const calculateComparison = function (elem, options, output_elem) {\n//\n//       // see if there's a comparison term\n//       let term_compare = get_field(elem, options, \"term_compare\");\n//\n//       // if the comparison term is empty, use the normal term field\n//       if (typeof (term_compare) == \"boolean\") {\n//         term_compare = get_field(elem, options, \"term\");\n//       }\n//\n//       // Get information about the two different loans in question\n//       // and create a callback data variable that we'll pass into\n//       // our callback function.\n//       const loan_1_info = $.loanInfo({\n//             amount: get_field(elem, options, \"amount\"),\n//             rate: get_field(elem, options, \"rate\"),\n//             term: get_field(elem, options, \"term\")\n//           }),\n//           loan_2_info = $.loanInfo({\n//             amount: get_field(elem, options, \"amount\"),\n//             rate: get_field(elem, options, \"rate_compare\"),\n//             term: term_compare\n//           }),\n//           callback_data = {\n//             loan_1: loan_1_info,\n//             loan_2: loan_2_info\n//           };\n//\n//       // If both loans are good, populate response element with info,\n//       // else error.\n//       if (loan_1_info !== 0 && loan_2_info !== 0) {\n//         if (loan_1_info.total_interest - loan_2_info.total_interest > 0) {\n//           callback_data.savings = loan_1_info.total_interest - loan_2_info.total_interest;\n//         } else {\n//           callback_data.savings = 0;\n//         }\n//\n//         // replace our savings placeholder in the response text with\n//         // the real difference in interest.\n//         const output_content = options.response_compare\n//             .replace(\"%savings%\", formatNumber(callback_data.savings.toFixed(2), options))\n//             .replace(\"%loan_1_payment_amount%\", formatNumber(loan_2_info.payment_amount_formatted, options))\n//             .replace(\"%loan_1_num_payments%\", loan_2_info.num_payments)\n//             .replace(\"%loan_1_total_payments%\", loan_2_info.total_payments_formatted)\n//             .replace(\"%loan_1_total_interest%\", formatNumber(loan_2_info.total_interest_formatted, options))\n//             .replace(\"%loan_2_payment_amount%\", formatNumber(loan_1_info.payment_amount_formatted, options))\n//             .replace(\"%loan_2_num_payments%\", loan_1_info.num_payments)\n//             .replace(\"%loan_2_total_payments%\", loan_1_info.total_payments_formatted)\n//             .replace(\"%loan_2_total_interest%\", formatNumber(loan_1_info.total_interest_formatted, options));\n//         output_elem.html(output_content);\n//\n//       } else {\n//\n//         // output an error\n//         output_elem.html(options.error_text);\n//\n//       }\n//\n//       // run the callback, passing our loan data into it.\n//       options.callback(elem, callback_data);\n//     };\n// // for a single loan object.\n//     const calculateAmortization = function (elem, options, output_elem) {\n//\n//       // Get the loan information so we can build out our amortization\n//       // schedule table.\n//       const loan_info = $.loanInfo({\n//         amount: get_field(elem, options, \"amount\"),\n//         rate: get_field(elem, options, \"rate\"),\n//         term: get_field(elem, options, \"term\")\n//       });\n//\n//       // If the loan info's good, start buildin'!\n//       if (loan_info !== 0) {\n//\n//         // Set some initial variables for the table header, interest\n//         // per payment, amount from balance, and counter variables\n//         // to values as we list rows.\n//         let output_content = '<table className=\"accrue-amortization\">' +\n//             '<thead><tr>' +\n//             '<th className=\"accrue-payment-number\">#</th>' +\n//             '<th className=\"accrue-payment-amount\">Payment Amt.</th>' +\n//             '<th className=\"accrue-total-interest\">Total Interest</th>' +\n//             '<th className=\"accrue-total-payments\">Total Payments</th>' +\n//             '<th className=\"accrue-balance\">Balance</th>' +\n//             '</tr></thead><tbody>',\n//             interest_per_payment = loan_info.payment_amount - (loan_info.original_amount / loan_info.num_payments),\n//             amount_from_balance = loan_info.payment_amount - interest_per_payment,\n//             counter_interest = 0,\n//             counter_payment = 0,\n//             counter_balance = parseInt(loan_info.original_amount, 10);\n//\n//         // Start appending the table rows to our output variable.\n//         for (let i = 0; i < loan_info.num_payments; i++) {\n//\n//           // Record the payment in our counter variables.\n//           counter_interest = counter_interest + interest_per_payment;\n//           counter_payment = counter_payment + loan_info.payment_amount;\n//           counter_balance = counter_balance - amount_from_balance;\n//\n//           // bold the last row of the table by using <th>s for\n//           // the values.\n//           let cell_tag = \"td\";\n//           if (i === (loan_info.num_payments - 1)) {\n//             cell_tag = \"th\";\n//           }\n//\n//           // Append a row to the table\n//           output_content = output_content +\n//               '<tr>' +\n//               '<' + cell_tag + ' className=\"accrue-payment-number\">' + (i + 1) + '</' + cell_tag + '>' +\n//               '<' + cell_tag + ' className=\"accrue-payment-amount\">' + formatNumber(loan_info.payment_amount_formatted, options) + '</' + cell_tag + '>' +\n//               '<' + cell_tag + ' className=\"accrue-total-interest\">' + formatNumber(counter_interest.toFixed(2), options) + '</' + cell_tag + '>' +\n//               '<' + cell_tag + ' className=\"accrue-total-payments\">' + formatNumber(counter_payment.toFixed(2), options) + '</' + cell_tag + '>' +\n//               '<' + cell_tag + ' className=\"accrue-balance\">' + formatNumber(counter_balance.toFixed(2), options) + '</' + cell_tag + '>' +\n//               '</tr>';\n//         }\n//\n//         // Finish off our table tag.\n//         output_content = output_content +\n//             '</tbody></table>';\n//\n//         // Push our output content into the output element.\n//         output_elem.html(output_content);\n//       } else {\n//\n//         // Values aren't good yet, show the error.\n//         output_elem.html(options.error_text);\n//       }\n//\n//       // Execute callback, passing in loan information.\n//       options.callback(elem, loan_info);\n//     };\n// // let's start our plugin logic\n//     $.extend($.fn, {\n//       accrue: function (options) {\n//\n//         // set our options from the defaults, overriding with the\n//         // parameter we pass into this function.\n//         options = $.extend({calculationMethod: calculateBasic}, $.fn.accrue.options, options);\n//\n//         // Iterate through all the matching elements and return\n//         // the jquery object to preserve chaining.\n//         return this.each(function () {\n//\n//           // Store a jQuery object for our element so we can use it\n//           // inside our other bindings.\n//           const elem = $(this);\n//\n//           // Create the form div if it doesn't exist.\n//           if (!elem.find(\".form\").length) {\n//             elem.append('<div className=\"form\"></div>');\n//           }\n//\n//           // Get the amount, rate(s), and term - and clean the values\n//           const amount = get_field(elem, options, \"amount\");\n//           const rate = get_field(elem, options, \"rate\");\n//           const term = get_field(elem, options, \"term\");\n//\n//           // If we're in comparison mode, grab an additiona field/value.\n//           if (options.mode === \"compare\") {\n//             const rate_compare = get_field(elem, options, \"rate_compare\");\n//           }\n//\n//           // If we are using the default results div and it doesn't exist, create it.\n//           let output_elem;\n//           if (options.response_output_div === \".results\") {\n//\n//             if (elem.find(\".results\").length === 0) {\n//               elem.append('<div className=\"results\"></div>');\n//             }\n//\n//             // Set the output div as a variable so we can refer to it more easily.\n//             output_elem = elem.find(\".results\");\n//\n//           } else {\n//\n//             // Set the output div as a variable so we can refer to it more easily.\n//             output_elem = $(options.response_output_div);\n//\n//           }\n//\n//\n//           // Set the calculation method based on which mode we're in.\n//           let calculation_method;\n//           switch (options.mode) {\n//\n//             case \"basic\":\n//               calculation_method = calculateBasic;\n//               break;\n//\n//             case \"compare\":\n//               calculation_method = calculateComparison;\n//               break;\n//\n//             case \"amortization\":\n//               calculation_method = calculateAmortization;\n//               break;\n//\n//           }\n//\n//\n//           // Get the information about the loan.\n//           calculation_method(elem, options, output_elem);\n//\n//           // Do some different things if the operation mode is \"button\"\n//           if (options.operation === \"button\") {\n//\n//             // If we are using button operation mode and the button doesn't exist, create one.\n//             if (elem.find(\"button\").length === 0 && elem.find(\"input[type=submit]\").length === 0 && elem.find(\"input[type=image]\").length === 0) {\n//               elem.find(\".form\").append('<button className=\"accrue-calculate\">' + options.button_label + '</button>');\n//             }\n//\n//             // If the developer has chosen to bind to a button instead\n//             // of operate on keyup, let's set up a click event binding\n//             // that performs the calculation.\n//             elem.find(\"button, input[type=submit], input[type=image]\").each(function () {\n//               $(this).click(function (event) {\n//                 event.preventDefault();\n//                 calculation_method(elem, options, output_elem);\n//               });\n//             });\n//\n//           } else {\n//\n//             // Bind to the select and input elements so that we calculate\n//             // on keyup (or change in the case of the select list).\n//             elem.find(\"input, select\").each(function () {\n//               $(this).bind(\"keyup change\", function () {\n//                 calculation_method(elem, options, output_elem);\n//               });\n//             });\n//\n//           }\n//\n//           // If the developer has chosen to bind to a button instead\n//           // of operate on keyup, let's set up a click event binding\n//           // that performs the calculation.\n//           elem.find(\"form\").each(function () {\n//             $(this).submit(function (event) {\n//               event.preventDefault();\n//               calculation_method(elem, options, output_elem);\n//             });\n//           });\n//\n//         });\n//       }\n//     });\n//\n//\n//     // DEFAULTS\n//     // Set up some default options for our plugin that can be overridden\n//     // as needed when we actually instantiate our plugin on a form.\n//     $.fn.accrue.options = {\n//       mode: \"basic\",\n//       operation: \"keyup\",\n//       currency: \"USD\",\n//       language: \"en\",\n//       default_values: {\n//         amount: \"7,500\",\n//         rate: \"7%\",\n//         rate_compare: \"1.49%\",\n//         term: \"36m\"\n//       },\n//       field_titles: {\n//         amount: \"Loan Amount\",\n//         rate: \"Rate (APR)\",\n//         rate_compare: \"Comparison Rate\",\n//         term: \"Term\"\n//       },\n//       button_label: \"Calculate\",\n//       field_comments: {\n//         amount: \"\",\n//         rate: \"\",\n//         rate_compare: \"\",\n//         term: \"Format: 12m, 36m, 3y, 7y\"\n//       },\n//       response_output_div: \".results\",\n//       response_basic:\n//           '<p><strong>Monthly Payment:</strong><br />%payment_amount%</p>' +\n//           '<p><strong>Number of Payments:</strong><br />%num_payments%</p>' +\n//           '<p><strong>Total Payments:</strong><br />%total_payments%</p>' +\n//           '<p><strong>Total Interest:</strong><br />%total_interest%</p>',\n//       response_compare: '<p className=\"total-savings\">Save %savings% in interest!</p>',\n//       error_text: '<p className=\"error\">Please fill in all fields.</p>',\n//       callback: function (elem, data) {\n//       }\n//     };\n//\n//     // FORMAT MONEY\n//     // This function is used to add thousand seperators to numerical ouput\n//     // as a means of properly formatting money\n//     function formatNumber(num, options) {\n//       return new Intl.NumberFormat(options.language, {\n//         style: 'currency',\n//         currency: options.currency\n//       }).format(num);\n//     }\n//\n//\n//     // BASIC LOGGING FUNCTION\n//     // Checks to see if the console is available before outputting\n//     // anything through console.log(). Prevent issues with IE.\n//     const log = function (message) {\n//       if (window.console) {\n//         console.log(message);\n//       }\n//     };\n//\n//\n//     // GENERAL LOAN INFORMATION FUNCTION\n//     // This is the public function we use inside our plugin function\n//     // and we're exposing it here so that we can also provide generic\n//     // calculations that just return JSON objects that can be used\n//     // for custom-developed plugins.\n//     $.loanInfo = function (input) {\n//\n//       var amount = (typeof (input.amount) !== \"undefined\" ? input.amount : 0).toString().replace(/[^\\d.]/ig, ''),\n//           rate = (typeof (input.rate) !== \"undefined\" ? input.rate : 0).toString().replace(/[^\\d.]/ig, ''),\n//           term = (typeof (input.term) !== \"undefined\" ? input.term : 0);\n//\n//       // parse year values passed into the term value\n//       if (term.match(\"y\")) {\n//         term = parseInt(term.replace(/[^\\d.]/ig, ''), 10) * 12;\n//       } else {\n//         term = parseInt(term.replace(/[^\\d.]/ig, ''), 10);\n//       }\n//\n//       // process the input values\n//       const monthly_interest = rate / 100 / 12;\n//\n//       // Now compute the monthly payment amount.\n//       const x = Math.pow(1 + monthly_interest, term),\n//           monthly = (amount * x * monthly_interest) / (x - 1);\n//\n//       // If the result is a finite number, the user's input was good and\n//       // we have meaningful results to display\n//       if (amount * rate * term > 0) {\n//         // Fill in the output fields, rounding to 2 decimal places\n//         return {\n//           original_amount: amount,\n//           payment_amount: monthly,\n//           payment_amount_formatted: monthly.toFixed(2),\n//           num_payments: term,\n//           total_payments: (monthly * term),\n//           total_payments_formatted: (monthly * term).toFixed(2),\n//           total_interest: ((monthly * term) - amount),\n//           total_interest_formatted: ((monthly * term) - amount).toFixed(2)\n//         };\n//       } else {\n//         // The numbers provided won't provide good data as results,\n//         // so we'll return 0 so it's easy to test if one of the fields\n//         // is empty or invalid.\n//         return 0;\n//       }\n//     };\n//\n//\n//     // REVERSE LOAN INFORMATION FUNCTION\n//     // This is a copy of the above, only that given a payment amount, rate and term it\n//     // will return the principal amount that can be borrowed.\n//     $.loanAmount = function (input) {\n//\n//       var payment = (typeof (input.payment) !== \"undefined\" ? input.payment : 0).toString().replace(/[^\\d.]/ig, ''),\n//           rate = (typeof (input.rate) !== \"undefined\" ? input.rate : 0).toString().replace(/[^\\d.]/ig, ''),\n//           term = (typeof (input.term) !== \"undefined\" ? input.term : 0);\n//\n//       // parse year values passed into the term value\n//       if (term.match(\"y\")) {\n//         term = parseInt(term.replace(/[^\\d.]/ig, ''), 10) * 12;\n//       } else {\n//         term = parseInt(term.replace(/[^\\d.]/ig, ''), 10);\n//       }\n//\n//       // process the input values\n//       const monthly_interest = rate / 100 / 12,\n//           annual_interest = rate / 100;\n//\n//       // Now compute.\n//       const x = payment * (1 - Math.pow(1 + monthly_interest, -1 * term)) * (12 / (annual_interest));\n//\n//       // If the result is a finite number, the user's input was good and\n//       // we have meaningful results to display\n//       if (x > 0) {\n//         // Fill in the output fields, rounding to 2 decimal places\n//         return {\n//           principal_amount: x,\n//           principal_amount_formatted: (x * 1).toFixed(2),\n//           payment_amount: payment,\n//           payment_amount_formatted: (payment * 1).toFixed(2),\n//           num_payments: term,\n//           total_payments: (payment * term),\n//           total_payments_formatted: (payment * term).toFixed(2),\n//           total_interest: ((payment * term) - x),\n//           total_interest_formatted: ((payment * term) - x).toFixed(2)\n//         };\n//\n//       } else {\n//         // The numbers provided won't provide good data as results,\n//         // so we'll return 0 so it's easy to test if one of the fields\n//         // is empty or invalid.\n//         return 0;\n//       }\n//     };\n//\n//   })\n//   ($, window, document);\n//\n//   return (\n//       <main>\n//         <Paper>\n//           <section id=\"demos\">\n//             <div className=\"container\">\n//               <div className=\"tabs\">\n//                 <a className=\"tab tab-1 active\" href=\"#\" data-tab=\"basic-cal\">Basic Calculation</a>\n//                 <a className=\"tab tab-2\" href=\"#\" data-tab=\"2\">Interest Calculation</a>\n//                 <a className=\"tab tab-3\" href=\"#\" data-tab=\"3\">Amortization Schedule Calculation</a>\n//                 <span className=\"highlighter\"/>\n//               </div>\n//\n//               <div className=\"content\">\n//                 <div className=\"content__section visible\" data-tab=\"basic-cal\">\n//                     <div className=\"wrap\">\n//                       <h2>Basic Loan Calculation</h2>\n//                       <div className=\"forty\">\n//                         <p>Grabs three values from the form, and returns general information about a loan.</p></div>\n//\n//                       <div className=\"calculator-loan\">\n//                         <div className=\"thirty form\">\n//                           <div className=\"accrue-field-amount\">\n//                             <p>\n//                               <label>Loan Amount:</label>\n//                               <input type=\"text\"\n//                                      className=\"amount\"\n//                                      value=\"7,500\" />\n//                               </p>\n//                           </div>\n//\n//                           <div className=\"accrue-field-rate\">\n//                             <p>\n//                               <label>Rate (APR):</label>\n//                               <input type=\"text\"\n//                                      className=\"rate\"\n//                                      value=\"7%\"/>\n//                             </p>\n//                           </div>\n//                           <div className=\"accrue-field-term\">\n//                             <p>\n//                               <label>Term:</label>\n//                               <input type=\"text\"\n//                                      className=\"term\"\n//                                       value=\"36m\"/>\n//                               <small>Format: 12m, 36m, 3y, 7y</small>\n//                             </p>\n//                           </div>\n//                         </div>\n//                         <div className=\"thirty\">\n//                           <p><label>Results:</label></p>\n//                           <div className=\"results\"/>\n//                         </div>\n//                       </div>\n//                       <div className=\"clear\"/>\n//                     </div>\n//                 </div>\n//\n//                 <div className=\"content__section\" data-tab=\"2\">\n//                   <div className=\"wrap\">\n//\n//                     <h2>Interest Savings Calculation</h2>\n//\n//                     <div className=\"forty\">\n//                       <p>Grabs four values from the form, and returns general information about a loan.</p>\n//                     </div>\n//\n//                     <div className=\"calculator-compare\">\n//                       <div className=\"thirty form\">\n//                         <div className=\"accrue-field-amount\">\n//                           <p><label>Loan Amount:</label>\n//                             <input type=\"text\" className=\"amount\" value=\"7,500\"/>\n//                           </p>\n//                         </div>\n//                         <div className=\"accrue-field-rate\">\n//                           <p><label>Rate (APR):</label>\n//                             <input type=\"text\" className=\"rate\" value=\"7%\"/>\n//                           </p>\n//                         </div>\n//                         <div className=\"accrue-field-term\">\n//                           <p><label>Term:</label>\n//                             <input type=\"text\" className=\"term\" value=\"36m\"/>\n//                             <small>Format: 12m, 36m, 3y, 7y</small>\n//                           </p>\n//                         </div>\n//                         <div className=\"accrue-field-rate_compare\">\n//                           <p>\n//                             <label>Comparison Rate:</label>\n//                             <input type=\"text\" className=\"rate_compare\" value=\"1.49%\"/>\n//                           </p>\n//                         </div>\n//                       </div>\n//\n//                       <div className=\"thirty\">\n//                         <p><label>Results:</label></p>\n//                         <div className=\"results\"/>\n//                       </div>\n//\n//                       <div className=\"clear\"/>\n//                     </div>\n//                   </div>\n//                 </div>\n//\n//                 <div className=\"content__section\" data-tab=\"3\">\n//                   <div className=\"wrap\">\n//\n//                     <h2>Amortization Schedule Calculation</h2>\n//\n//                     <div className=\"fifty\">\n//                       <p>Grabs three values from the form, and displays a complete amortization schedule for the\n//                         provided loan information.</p>\n//                     </div>\n//\n//                     <div className=\"calculator-amortization\">\n//                       <div className=\"thirty form\">\n//                         <div className=\"accrue-field-amount\">\n//                           <p><label>Loan Amount:</label>\n//                             <input type=\"text\" className=\"amount\" value=\"7,500\"/>\n//                           </p>\n//                         </div>\n//                         <div className=\"accrue-field-rate\">\n//                           <p>\n//                             <label>Rate (APR):</label>\n//                             <input type=\"text\" className=\"rate\" value=\"7%\"/>\n//                           </p>\n//                         </div>\n//                         <div className=\"accrue-field-term\">\n//                           <p>\n//                             <label>Term:</label>\n//                             <input type=\"text\" className=\"term\" value=\"36m\"/>\n//                             <small>Format: 12m, 36m, 3y, 7y</small>\n//                           </p>\n//                         </div>\n//                       </div>\n//                       <div className=\"seventy\">\n//                         <p>\n//                           <label>Results:</label>\n//                         </p>\n//                         <div className=\"results\">\n//                           <table className=\"accrue-amortization\">\n//                             <thead>\n//                               <tr>\n//                                 <th className=\"accrue-payment-number\">#</th>\n//                                 <th className=\"accrue-payment-amount\">Payment Amt.</th>\n//                                 <th className=\"accrue-total-interest\">Total Interest</th>\n//                                 <th className=\"accrue-total-payments\">Total Payments</th>\n//                                 <th className=\"accrue-balance\">Balance</th>\n//                               </tr>\n//                             </thead>\n//                             <tbody>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">1</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$23.24</td>\n//                               <td className=\"accrue-total-payments\">$231.58</td>\n//                               <td className=\"accrue-balance\">$7,291.67</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">2</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$46.49</td>\n//                               <td className=\"accrue-total-payments\">$463.16</td>\n//                               <td className=\"accrue-balance\">$7,083.33</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">3</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$69.73</td>\n//                               <td className=\"accrue-total-payments\">$694.73</td>\n//                               <td className=\"accrue-balance\">$6,875.00</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">4</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$92.98</td>\n//                               <td className=\"accrue-total-payments\">$926.31</td>\n//                               <td className=\"accrue-balance\">$6,666.67</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">5</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$116.22</td>\n//                               <td className=\"accrue-total-payments\">$1,157.89</td>\n//                               <td className=\"accrue-balance\">$6,458.33</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">6</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$139.47</td>\n//                               <td className=\"accrue-total-payments\">$1,389.47</td>\n//                               <td className=\"accrue-balance\">$6,250.00</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">7</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$162.71</td>\n//                               <td className=\"accrue-total-payments\">$1,621.05</td>\n//                               <td className=\"accrue-balance\">$6,041.67</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">8</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$185.96</td>\n//                               <td className=\"accrue-total-payments\">$1,852.63</td>\n//                               <td className=\"accrue-balance\">$5,833.33</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">9</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$209.20</td>\n//                               <td className=\"accrue-total-payments\">$2,084.20</td>\n//                               <td className=\"accrue-balance\">$5,625.00</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">10</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$232.45</td>\n//                               <td className=\"accrue-total-payments\">$2,315.78</td>\n//                               <td className=\"accrue-balance\">$5,416.67</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">11</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$255.69</td>\n//                               <td className=\"accrue-total-payments\">$2,547.36</td>\n//                               <td className=\"accrue-balance\">$5,208.33</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">12</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$278.94</td>\n//                               <td className=\"accrue-total-payments\">$2,778.94</td>\n//                               <td className=\"accrue-balance\">$5,000.00</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">13</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$302.18</td>\n//                               <td className=\"accrue-total-payments\">$3,010.52</td>\n//                               <td className=\"accrue-balance\">$4,791.67</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">14</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$325.43</td>\n//                               <td className=\"accrue-total-payments\">$3,242.10</td>\n//                               <td className=\"accrue-balance\">$4,583.33</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">15</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$348.67</td>\n//                               <td className=\"accrue-total-payments\">$3,473.67</td>\n//                               <td className=\"accrue-balance\">$4,375.00</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">16</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$371.92</td>\n//                               <td className=\"accrue-total-payments\">$3,705.25</td>\n//                               <td className=\"accrue-balance\">$4,166.67</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">17</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$395.16</td>\n//                               <td className=\"accrue-total-payments\">$3,936.83</td>\n//                               <td className=\"accrue-balance\">$3,958.33</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">18</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$418.41</td>\n//                               <td className=\"accrue-total-payments\">$4,168.41</td>\n//                               <td className=\"accrue-balance\">$3,750.00</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">19</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$441.65</td>\n//                               <td className=\"accrue-total-payments\">$4,399.99</td>\n//                               <td className=\"accrue-balance\">$3,541.67</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">20</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$464.90</td>\n//                               <td className=\"accrue-total-payments\">$4,631.56</td>\n//                               <td className=\"accrue-balance\">$3,333.33</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">21</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$488.14</td>\n//                               <td className=\"accrue-total-payments\">$4,863.14</td>\n//                               <td className=\"accrue-balance\">$3,125.00</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">22</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$511.39</td>\n//                               <td className=\"accrue-total-payments\">$5,094.72</td>\n//                               <td className=\"accrue-balance\">$2,916.67</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">23</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$534.63</td>\n//                               <td className=\"accrue-total-payments\">$5,326.30</td>\n//                               <td className=\"accrue-balance\">$2,708.33</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">24</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$557.88</td>\n//                               <td className=\"accrue-total-payments\">$5,557.88</td>\n//                               <td className=\"accrue-balance\">$2,500.00</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">25</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$581.12</td>\n//                               <td className=\"accrue-total-payments\">$5,789.46</td>\n//                               <td className=\"accrue-balance\">$2,291.67</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">26</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$604.37</td>\n//                               <td className=\"accrue-total-payments\">$6,021.03</td>\n//                               <td className=\"accrue-balance\">$2,083.33</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">27</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$627.61</td>\n//                               <td className=\"accrue-total-payments\">$6,252.61</td>\n//                               <td className=\"accrue-balance\">$1,875.00</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">28</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$650.86</td>\n//                               <td className=\"accrue-total-payments\">$6,484.19</td>\n//                               <td className=\"accrue-balance\">$1,666.67</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">29</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$674.10</td>\n//                               <td className=\"accrue-total-payments\">$6,715.77</td>\n//                               <td className=\"accrue-balance\">$1,458.33</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">30</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$697.35</td>\n//                               <td className=\"accrue-total-payments\">$6,947.35</td>\n//                               <td className=\"accrue-balance\">$1,250.00</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">31</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$720.59</td>\n//                               <td className=\"accrue-total-payments\">$7,178.93</td>\n//                               <td className=\"accrue-balance\">$1,041.67</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">32</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$743.84</td>\n//                               <td className=\"accrue-total-payments\">$7,410.50</td>\n//                               <td className=\"accrue-balance\">$833.33</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">33</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$767.08</td>\n//                               <td className=\"accrue-total-payments\">$7,642.08</td>\n//                               <td className=\"accrue-balance\">$625.00</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">34</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$790.33</td>\n//                               <td className=\"accrue-total-payments\">$7,873.66</td>\n//                               <td className=\"accrue-balance\">$416.67</td>\n//                             </tr>\n//                             <tr>\n//                               <td className=\"accrue-payment-number\">35</td>\n//                               <td className=\"accrue-payment-amount\">$231.58</td>\n//                               <td className=\"accrue-total-interest\">$813.57</td>\n//                               <td className=\"accrue-total-payments\">$8,105.24</td>\n//                               <td className=\"accrue-balance\">$208.33</td>\n//                             </tr>\n//                             <tr>\n//                               <th className=\"accrue-payment-number\">36</th>\n//                               <th className=\"accrue-payment-amount\">$231.58</th>\n//                               <th className=\"accrue-total-interest\">$836.82</th>\n//                               <th className=\"accrue-total-payments\">$8,336.82</th>\n//                               <th className=\"accrue-balance\">$0.00</th>\n//                             </tr>\n//                             </tbody>\n//                           </table>\n//                         </div>\n//                       </div>\n//\n//                       <div className=\"clear\"/>\n//                     </div>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </section>\n//         </Paper>\n//       </main>\n//   )\n// }\nimport \"../../style.scss\";\nimport React from 'react';\nimport {Tabs, TabList, Tab, PanelList, Panel} from \"react-tabtab\";\nimport customStyle from '../TabStyles';\nimport BasicForm from \"../BasicForm/BasicCalculation\";\nimport InterestForm from \"../InterestForm/InterestForm\";\nimport AmortizationForm from \"../AmortizationForm/AmortizationForm\";\nimport {Section, SectionTitle} from \"./style\";\n\nexport default function App(){\n  return (\n      <div className=\"App\">\n          <Section>\n            <SectionTitle>Calculation Demos</SectionTitle>\n              <Tabs customStyle={customStyle} >\n                  <TabList>\n                    <Tab>Basic Loan Calculation</Tab>\n                    <Tab>Interest Savings Calculation</Tab>\n                    <Tab>Amortization Schedule Calculation</Tab>\n                  </TabList>\n                  <PanelList>\n                    <Panel>\n                      <BasicForm />\n                    </Panel>\n                    <Panel>\n                     <InterestForm/>\n                    </Panel>\n                    <Panel>\n                      <AmortizationForm />\n                    </Panel>\n                  </PanelList>\n              </Tabs>\n          </Section>\n      </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./style.scss\";\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { defineCustomElements } from '@ionic/pwa-elements/loader';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\ndefineCustomElements(window);\n"],"sourceRoot":""}